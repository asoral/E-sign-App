{
  "version": 3,
  "sources": ["../../../../../apps/esign_app/esign_app/public/js/timeline_button.js", "../../../../../apps/esign_app/esign_app/public/js/esign.bundle.js"],
  "sourcesContent": ["// Timeline button for Frappe\n$(document).on(\"app_ready\", function () {\n  $.each(frappe.boot.user.can_read, function (i, doctype) {\n    let buttonAdded = false; // Track if the button has been added\n\n    frappe.ui.form.on(doctype, {\n      refresh: function (frm) {\n        if (!frm.is_new()) {\n          if (frm.footer?.frm?.timeline && !buttonAdded) {\n            // Function to open the popup\n            let send_esign = async () => {\n              console.log('inside send button')\n              let user = frappe.session.user;\n              console.log('got user section',user)\n              let userDetails = await frappe.db.get_value(\"User\", user, [\n                \"full_name\",\n                \"email\",\n              ]);\n              console.log('got user details section',userDetails)\n              let doctype = frm.doctype;\n              console.log('got doctype ',doctype)\n              let docname = frm.docname;\n              console.log('got docname ',docname)\n              let fullName = userDetails?.message?.full_name || \"Unknown User\";\n              let email = userDetails?.message?.email || \"No Email\";\n              \n              let templates = [];\n              try {\n                let response = await fetch(\n                  `/api/method/esign_app.api.get_templetes?user_mail=${email}`\n                );\n                let data = await response.json();\n                console.log('got response',data)\n                if (data.message?.status === 200 && Array.isArray(data.message.data)) {\n                  templates = data.message.data.map((temp) => ({\n                    label: temp.templete_title.trim(), \n                    value: temp.name.trim(),\n                  }));\n                }\n              } catch (error) {\n                console.error(\"Error fetching templates:\", error);\n              }\n\n              console.log(\"Fetched Templates:\", templates);\n\n\n              // API URL with dynamic values\n              let pdfUrl = `/api/method/frappe.utils.print_format.download_pdf?doctype=${doctype}&name=${docname}&format=Standard&no_letterhead=1&letterhead=No%20Letterhead&settings=%7B%7D&_lang=en`;\n              console.log('pdf url Loaded',pdfUrl)\n              // Fetch PDF and convert to base64\n              let pdfBase64 = \"\";\n              try {\n                let response = await fetch(pdfUrl);\n                let blob = await response.blob();\n                let reader = new FileReader();\n                reader.readAsDataURL(blob);\n                reader.onloadend = function () {\n                  pdfBase64 = reader.result.split(\",\")[1];\n                  console.log(\"PDF Base64:\", pdfBase64);\n                };\n              } catch (error) {\n                console.error(\"Error fetching PDF:\", error);\n              }\n\n              let templateOptions = {};\n              if (templates.length) {\n                templateOptions = Object.fromEntries(templates.map((t) => [t.label, t.value]));\n              }\n              // show the dialog box \n              let dialog = new frappe.ui.Dialog({\n                title: \"Send to eSign\",\n                fields: [\n                  {\n                    fieldname: \"user_details\",\n                    label: \"User Details\",\n                    fieldtype: \"HTML\",\n                    options: `<div style=\"\n                              font-family: 'Arial', sans-serif;\n                              font-size: 16px;\n                              line-height: 1.6;\n                              color: #333;\n                              background: #f9f9f9;\n                              padding: 15px 20px;\n                              border: 1px solid #ddd;\n                              border-radius: 10px;\n                              max-width: 400px;\n                              box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n                          \">\n                              <p style=\"\n                                  margin: 0 0 5px;\n                                  font-weight: 600;\n                                  font-size: 18px;\n                                  color: #222;\n                              \">\n                                  ${fullName}\n                              </p>\n                              <p style=\"\n                                  margin: 0;\n                                  font-size: 14px;\n                                  color: #555;\n                              \">\n                                  ${email}\n                              </p>\n                          </div>\n                          </br>\n                          `,\n                  },\n                  // {\n                  //   fieldname: \"doctype\",\n                  //   label: \"Doctype\",\n                  //   fieldtype: \"Data\",\n                  //   default: doctype,\n                  //   read_only: 1,\n                  // },\n                  // {\n                  //   fieldname: \"docname\",\n                  //   label: \"Document Name\",\n                  //   fieldtype: \"Data\",\n                  //   default: docname,\n                  //   read_only: 1,\n                  // },\n                  {\n                    fieldname: \"custom_docname\",\n                    label: \"Enter Name\",\n                    default: docname,\n                    fieldtype: \"Data\",\n                    reqd: 1,\n                  },\n                  {\n                    fieldname: \"template_select\",\n                    label: \"Select Template\",\n                    fieldtype: \"Select\",\n                    options: Object.keys(templateOptions), \n                  },\n                ],\n                primary_action_label: \"Submit\",\n                primary_action(values) {\n                  let selectedLabel = values.template_select;\n                  let selectedValue = templateOptions[selectedLabel] || null; \n                  console.log(\"User Email:\", email);\n                  let response = frappe.call({\n                    method: \"esign_app.api.fetch_and_print_data\",\n                    args: {\n                        custom_docname: values.custom_docname,\n                        selectedValue: selectedValue,\n                        pdfBase64: pdfBase64, \n                        email: email\n                    }\n                  });\n\n                  dialog.hide();\n                },\n              });\n\n              dialog.show();\n            };\n\n            var timeline = frm.footer.frm.timeline;\n            timeline.add_action_button(\n              __(\"Send to Esign\"),\n              send_esign,\n              \"share\",\n              \"btn-secondary send-raven-button\"\n            );\n\n            buttonAdded = true;\n          }\n        }\n      },\n    });\n  });\n});\n", "$(document).on('app_ready', function (){\n\n});\n\nimport './timeline_button';"],
  "mappings": "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",
  "names": ["_a", "_b", "doctype"]
}
